/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import domain.Korisnik;
import domain.Prijava;
import domain.Stanovnik;
import java.awt.Font;
import java.io.EOFException;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.SocketTimeoutException;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import networkobject.Request;
import networkobject.Response;
import networkobject.TCPConnection;

/**
 *
 * @author Djurkovic
 */
public class GlavnaForma extends javax.swing.JFrame {

    private boolean ulogovan;
    private Korisnik user;
    private TCPConnection con;
    private Thread listenerThread;

    public Thread getListenerThread() {
        return listenerThread;
    }

    private volatile boolean isListening = true;

    public Korisnik getUser() {
        return user;
    }

    public void setUser(Korisnik user) {
        this.user = user;
    }

    public JLabel getLblKorisnik() {
        return lblKorisnik;
    }

    public void setLblKorisnik(JLabel lblKorisnik) {
        this.lblKorisnik = lblKorisnik;
    }

    /**
     * Creates new form GlavnaForma
     */
    public GlavnaForma(TCPConnection con) {
        ulogovan = false;
        this.con = con;
        initComponents();
        setLocationRelativeTo(null);
        SwingUtilities.invokeLater(() -> {
            JOptionPane.showMessageDialog(this, "Uspešno povezivanje sa serverom. Dobrodošli!");
        });
        DocumentListener d = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                changed();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                changed();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                changed();
            }

            private void changed() {
                if (txtKorisnickoIme.getText().isEmpty() || new String(txtSifra.getPassword()).isEmpty()) {
                    btnPrijava.setEnabled(false);
                } else {
                    btnPrijava.setEnabled(true);
                }
            }
        };
        txtKorisnickoIme.getDocument().addDocumentListener(d);
        txtSifra.getDocument().addDocumentListener(d);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNaslov = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnPrijava = new javax.swing.JButton();
        btnRegistracija = new javax.swing.JButton();
        lblKorisnickoIme = new javax.swing.JLabel();
        lblSifra = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        txtSifra = new javax.swing.JPasswordField();
        lblUlogovanKao = new javax.swing.JLabel();
        lblKorisnik = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNovaPrijava = new javax.swing.JButton();
        btnPregled = new javax.swing.JButton();
        btnOdjava = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Prijava Putovanja");
        setResizable(false);

        lblNaslov.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNaslov.setText("Sistem za prijavu putovanja u zemlje EU");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Prijava", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        btnPrijava.setText("Prijava");
        btnPrijava.setEnabled(false);
        btnPrijava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrijavaActionPerformed(evt);
            }
        });

        btnRegistracija.setText("Registracija");
        btnRegistracija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistracijaActionPerformed(evt);
            }
        });

        lblKorisnickoIme.setText("Korisničko Ime:");

        lblSifra.setText("Šifra:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPrijava)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblKorisnickoIme)
                        .addComponent(lblSifra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRegistracija)
                    .addComponent(txtKorisnickoIme)
                    .addComponent(txtSifra, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKorisnickoIme)
                    .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSifra)
                    .addComponent(txtSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrijava)
                    .addComponent(btnRegistracija))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        lblUlogovanKao.setText("Trenutno ste ulogovani kao:");

        lblKorisnik.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lblKorisnik.setText("Neulogovan Korisnik");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opcije Za Rad", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        btnNovaPrijava.setText("Nova Prijava");
        btnNovaPrijava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovaPrijavaActionPerformed(evt);
            }
        });

        btnPregled.setText("Pregled Prijava");
        btnPregled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPregledActionPerformed(evt);
            }
        });

        btnOdjava.setText("Odjava");
        btnOdjava.setEnabled(false);
        btnOdjava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdjavaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOdjava)
                    .addComponent(btnPregled)
                    .addComponent(btnNovaPrijava))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnNovaPrijava)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPregled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOdjava)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNaslov)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUlogovanKao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(lblNaslov)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUlogovanKao)
                    .addComponent(lblKorisnik))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistracijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistracijaActionPerformed
        if (ulogovan) {
            JOptionPane.showMessageDialog(this, "Molimo da se prvo odjavite kako biste napravili novu registraciju.", "Info", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        JDialog d = new Registracija(this, true);
        d.setLocationRelativeTo(this);
        d.setVisible(true);

    }//GEN-LAST:event_btnRegistracijaActionPerformed

    private void btnNovaPrijavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovaPrijavaActionPerformed
        JDialog d;
        if (!ulogovan) {
            d = new PrijavaAnon(this, true);
        } else {
            d = new PrijavaUlogovan(this, true, null, null, -1);
        }
        d.setLocationRelativeTo(this);
        d.setVisible(true);
    }//GEN-LAST:event_btnNovaPrijavaActionPerformed

    private void btnPrijavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrijavaActionPerformed
        if (ulogovan) {
            JOptionPane.showMessageDialog(this, "Morate se prvo odjaviti kako biste izvršili novu prijavu.", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            Korisnik k = new Korisnik(txtKorisnickoIme.getText().trim(), new String(txtSifra.getPassword()));
            Response r = posaljiZahtev("PRIJAVA", k);
            if (r == null) {
                JOptionPane.showMessageDialog(null, "Nepoznata greška pri prenosu kroz mrežu.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println("STIGAO: " + r);
            if (r.success) {
                if (!(r.responseData instanceof Korisnik)) {
                    JOptionPane.showMessageDialog(null, "Nepoznata greška pri prenosu kroz mrežu." + r.responseMessage, "Greška", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Uspešna prijava. Dobrodošli!.", "Uspešna prijava", JOptionPane.INFORMATION_MESSAGE);
                    ulogovan = true;
                    user = (Korisnik) r.responseData;
                    Font boldFont = new Font(lblKorisnik.getFont().getName(), Font.BOLD, lblKorisnik.getFont().getSize());
                    lblKorisnik.setFont(boldFont);
                    lblKorisnik.setText(user.getStanovnik().getIme() + " " + user.getStanovnik().getPrezime());
                    txtKorisnickoIme.setText("");
                    txtSifra.setText("");
                    btnOdjava.setEnabled(true);
                    btnPregled.setEnabled(true);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Neuspešna prijava: " + r.responseMessage, "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnPrijavaActionPerformed

    private void btnOdjavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdjavaActionPerformed
        if (!ulogovan) {
            return;
        }
        int choice = JOptionPane.showConfirmDialog(null, "Da li zaista želite da se odjavite?", "Potvrda", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            Response r = posaljiZahtev("ODJAVA", user.getId());
            if (r == null) {
                JOptionPane.showMessageDialog(null, "Nepoznata greška pri prenosu kroz mrežu.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (r.success) {
                JOptionPane.showMessageDialog(null, "Uspešna odjava. Doviđenja.", "Uspešna odjava", JOptionPane.INFORMATION_MESSAGE);
                ulogovan = false;
                user = null;
                Font boldFont = new Font(lblKorisnik.getFont().getName(), Font.ITALIC, lblKorisnik.getFont().getSize());
                lblKorisnik.setFont(boldFont);
                lblKorisnik.setText("Neulogovan Korisnik");
                btnOdjava.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Akcija nije uspela. Molimo pokušajte kasnije." + r.responseMessage, "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnOdjavaActionPerformed

    public List<Prijava> vratiPrijave(String JMBG, String brojPasosa) {
        Response r = posaljiZahtev("VRATI_PRIJAVE", new Stanovnik(JMBG, brojPasosa));
        if(r != null && !r.success) {
            JOptionPane.showMessageDialog(null, r.responseMessage, "Greška", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        
        if (!(r.responseData instanceof List<?>)) {
            JOptionPane.showMessageDialog(null, "Nepoznata greška pri prenosu kroz mrežu.", "Greška", JOptionPane.ERROR_MESSAGE);
            return null;
        }
        List<Prijava> prijave;
        try {
            List<?> t = (List<?>) r.responseData;
            prijave = (List<Prijava>) t;
            return prijave;
        } catch (ClassCastException e) {
            JOptionPane.showMessageDialog(null, "Nepoznata greška pri prenosu kroz mrežu.", "Greška", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    private void btnPregledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPregledActionPerformed
        if (!ulogovan) {
            JDialog d = new PretragaForma(this, true);
            d.setLocationRelativeTo(this);
            d.setVisible(true);
        } else {
            List<Prijava> prijave = vratiPrijave(user.getStanovnik().getJMBG(), user.getStanovnik().getBrojPasosa());
            if(prijave != null) {
                JDialog d = new PregledPrijava(this, true, prijave, true);
                d.setLocationRelativeTo(this);
                d.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnPregledActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNovaPrijava;
    private javax.swing.JButton btnOdjava;
    private javax.swing.JButton btnPregled;
    private javax.swing.JButton btnPrijava;
    private javax.swing.JButton btnRegistracija;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblKorisnickoIme;
    private javax.swing.JLabel lblKorisnik;
    private javax.swing.JLabel lblNaslov;
    private javax.swing.JLabel lblSifra;
    private javax.swing.JLabel lblUlogovanKao;
    private javax.swing.JTextField txtKorisnickoIme;
    private javax.swing.JPasswordField txtSifra;
    // End of variables declaration//GEN-END:variables

    public Response posaljiZahtev(String message, Object data) {
        try {
            con.getOut().writeObject(new Request(message, data));
            con.getOut().flush();

            Object responseObject = con.getIn().readObject();
            if (!(responseObject instanceof Response)) {
                System.out.println(responseObject.getClass().getName());
                System.out.println("WARN: server je poslao nepoznat objekat kao odgovor. Mismatch verzija klasa?");
                return null;
            }
            Response response = (Response) responseObject;
            return response;
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Greška pri prenosu objekata preko mreže: " + e.getMessage(), "Greška", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
            return null;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Greška pri konekciji: Server je postao nedostižan.\nProverite vašu internet konekciju ili proverite da li je server još dostupan.", "Greška", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
            return null;
        }
    }
}
