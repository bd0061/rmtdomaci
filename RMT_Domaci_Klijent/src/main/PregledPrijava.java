/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package main;

import domain.Prijava;
import domain.PrijavaStatus;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import networkobject.Response;

/**
 *
 * @author Djurkovic
 */
public class PregledPrijava extends javax.swing.JDialog {

    /**
     * Creates new form PregledPrijava
     */
    private boolean ulogovan;
    private List<Prijava> prijave;
    private GlavnaForma parentFrame;

    public PregledPrijava(java.awt.Frame parent, boolean modal, List<Prijava> prijave, boolean ulogovan) {
        super(parent, modal);
        if (!(parent instanceof GlavnaForma)) {
            return;
        }
        parentFrame = (GlavnaForma) parent;
        initComponents();
        this.prijave = prijave;
        this.ulogovan = ulogovan;
        tabelaPrijave.setModel(new PrijavaModel(prijave));

        tabelaPrijave.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tabelaPrijave.getSelectedRow();
                    if (selectedRow != -1) {
                        PrijavaModel m = (PrijavaModel) tabelaPrijave.getModel();
                        Prijava p = m.getPrijave().get(selectedRow);
                        if (p.getStatus() != PrijavaStatus.NADOLAZECA) {
                            btnIzmeni.setEnabled(false);
                            btnObrisi.setEnabled(false);
                            lblObjasnjenje.setText("Samo nadolazeće prijave do kojih ima više od 48 sati mogu biti modifikovane.");
                        } else {
                            if (ulogovan) {
                                btnIzmeni.setEnabled(true);
                                btnObrisi.setEnabled(true);
                                lblObjasnjenje.setText("");
                            } else {
                                btnIzmeni.setEnabled(false);
                                btnObrisi.setEnabled(false);
                                lblObjasnjenje.setText("\t\tUlogujte se da biste mogli da menjate prijave.");
                            }
                        }
                    }
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPrijave = new javax.swing.JTable();
        btnObrisi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        lblObjasnjenje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Pregled Prijava");

        tabelaPrijave.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaPrijave);

        btnObrisi.setText("Obriši");
        btnObrisi.setEnabled(false);
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.setEnabled(false);
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        lblObjasnjenje.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 976, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblObjasnjenje, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(458, 458, 458)
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblObjasnjenje)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int choice = JOptionPane.showConfirmDialog(null, "Da li zaista želite da obrišete ovu prijavu?", "Potvrda", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            int selectedRow = tabelaPrijave.getSelectedRow();
            if (selectedRow != -1) {
                PrijavaModel m = (PrijavaModel) tabelaPrijave.getModel();
                Prijava p = m.getPrijave().get(selectedRow);
                Response r = parentFrame.posaljiZahtev("OBRISI_PRIJAVU", p.getId());
                if (r == null) {
                    JOptionPane.showMessageDialog(null, "Došlo je do neočekivane greške pri obradi zahteva.", "Greška", JOptionPane.ERROR_MESSAGE);
                }
                if (!r.success) {
                    JOptionPane.showMessageDialog(null, "Greška pri obradi zahteva: " + r.responseMessage, "Greška", JOptionPane.ERROR_MESSAGE);
                } else {
                    m.obrisiPrijavu(selectedRow);
                    JOptionPane.showMessageDialog(null, "Uspešno obrisana prijava.", "Uspeh", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int selectedRow = tabelaPrijave.getSelectedRow();
        if (selectedRow == -1) {
            return;
        }
        PrijavaModel m = (PrijavaModel) tabelaPrijave.getModel();
        Prijava p = m.getPrijave().get(selectedRow);

        JDialog d = new PrijavaUlogovan(parentFrame, true, p, m, selectedRow);
        d.setLocationRelativeTo(this);
        d.setVisible(true);
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblObjasnjenje;
    private javax.swing.JTable tabelaPrijave;
    // End of variables declaration//GEN-END:variables
}
